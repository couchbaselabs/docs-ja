<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="ja" id="cbepctl-threadpool-tuning">
  <title>共有スレッドプール設定の変更</title>
	<shortdesc>動的共有スレッドプールの性能は<codeph>cbepctl set flush_param</codeph>コマンドオプションでチューニングできます。</shortdesc>
  <refbody>
    <section><title>説明</title>
			<p>
				動的共有スレッドプールの性能は、実行時のep-engineとmemcached内のスレッド種別を変更することでチューニングできます。
				<codeph>cbepctl set flush_param</codeph>コマンドオプションは参照、更新、non-i/o、auxiliary-i/oオペレーションを優先するスレッド数を調整します。
				これらの設定は即座に反映され、バケットの再起動は必要ありません。
			</p>
        
			<note type="note">
				これらの設定は実行環境が十分なCPUコア数を有している場合のみ効果があります。
				最小CPUコア数は4ですが、更新用スレッドを1つ追加するには3つのコアがさらに必要です。
				例えば、5つの更新用スレッドを利用するには、少なくとも16コアのハードウェアが必要になります。
			</note>
    
      
      <p>以下のコマンドオプションパラメータを利用して性能をチューニングします:</p>
      <table>
        <title>パフォーマンスチューニングパラメータ</title>
        <tgroup cols="2">
          <colspec colname="col1"/>
          <colspec colname="col2"/>
          <thead>
            <row>
              <entry>パラメータ</entry>
              <entry>説明</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>max_num_readers</entry>
              <entry>デフォルトの参照オペレーション用グローバルスレッド数をオーバーライドする。</entry>
            </row>
            <row>
              <entry>max_num_writers</entry>
              <entry>デフォルトの更新オペレーション用グローバルスレッド数をオーバーライドする。</entry>
            </row>
            <row>
              <entry>max_num_auxio</entry>
              <entry>デフォルトのauxioオペレーション用グローバルスレッド数をオーバーライドする。</entry>
            </row>
            <row>
              <entry>max_num_nonio</entry>
              <entry>デフォルトのnonioオペレーション用グローバルスレッド数をオーバーライドする。</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      
    </section>
    
    <section><title>シンタックス</title>
      <p>基本シンタックス:</p>
      <codeblock>cbepctl [localhost]:11210 -b [bucket-name] set flush_param [parameter] [value]</codeblock>

    </section>
    
    <section><title>例</title>
			<p>最大更新スレッド数を設定するには、<codeph>max_num_writers</codeph>パラメータを利用します。
				以下の例では、<codeph>max_num_writers</codeph>で更新用スレッドを5に設定します。</p>
      <codeblock>cbepctl 10.5.2.117:11210 -b foo_bucket set flush_param max_num_writers 5 </codeblock>
      
      
      
    </section>
    
    <section><title>レスポンス</title>
      <p>次に最大更新用スレッド数を設定した際のレスポンス例を示します。</p>
      <codeblock>
setting param: max_num_writers 5
set max_num_writers to 5
      </codeblock>
      
      
			<p>それぞれのスレッド種別で現在どれだけのスレッドが起動しているかは、<codeph>cbstats workload</codeph>で確認できます。
			例:</p>
      <codeblock>cbstats [localhost]:11210 -b [bucket-name] workload </codeblock>
      
			<p>
				例えば、以下の<codeph>cbstats workload</codeph>リクエストとレスポンスの例は、defaultバケットに対して実行しています。
				変更した設定が、<codeph>ep_workload:max_writers: 5</codeph>として、<codeph>cbstats workload</codeph>の結果に表示されます。
			</p>
      
      <codeblock>
cbstats 10.5.2.117:11210 workload

 ep_workload:LowPrioQ_AuxIO:InQsize:   2
 ep_workload:LowPrioQ_AuxIO:OutQsize:  0
 ep_workload:LowPrioQ_NonIO:InQsize:   18
 ep_workload:LowPrioQ_NonIO:OutQsize:  0
 ep_workload:LowPrioQ_Reader:InQsize:  8
 ep_workload:LowPrioQ_Reader:OutQsize: 0
 ep_workload:LowPrioQ_Writer:InQsize:  12
 ep_workload:LowPrioQ_Writer:OutQsize: 0
 ep_workload:max_auxio:                1
 ep_workload:max_nonio:                1
 ep_workload:max_readers:              4
 ep_workload:max_writers:              5
 ep_workload:num_auxio:                1
 ep_workload:num_nonio:                1
 ep_workload:num_readers:              4
 ep_workload:num_shards:               4
 ep_workload:num_sleepers:             10
 ep_workload:num_writers:              5
 ep_workload:ready_tasks:              0
      </codeblock>
      
    </section>
    
    
  </refbody>
</reference>
