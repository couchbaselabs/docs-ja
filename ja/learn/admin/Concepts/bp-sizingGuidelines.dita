<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic13047">
	<title>サイジングガイドライン</title>
	<shortdesc>Couchbase Serverクラスタのサイジングで最も考慮すべき点は、ノード数とノードスペックです。</shortdesc>
	<body>
		<p>Couchbase Serverクラスタのサイジングを行う際は、以下の設問を利用します:</p>
		<ul>
			<li>何台のノードが必要か?</li>
			<li>これらのノードはどの程度のスペック(RAM、CPU、ディスク容量)であるべきか?</li>
		</ul>
		<p>クラスタで必要なノード数を決定するには、以下を考慮してください:</p>
		<ul>
			<li>RAM</li>
			<li>ディスクスループットとサイジング</li>
			<li>ネットワーク帯域</li>
			<li>データ分散と安全性</li>
		</ul>
		<p>Couchbase Serverのインメモリな性質として、RAMは通常サイジングを決定する要素になります。
			しかしながら、主なサイジング要素は実際のデータセットと保存される情報に依存します。 例えば:</p>
		<ul>
			<li>非常に小さなデータセットに対し、非常に頻繁にアクセスする場合、RAMよりもネットワーク帯域をベースにサイジングを計算すべきです。</li>
			<li>非常に高いデータ更新頻度の場合、より多くのノードで、すべてのデータを永続化するために必要なディスクスループットをサポートする必要があるでしょう (加えて更新リクエストのバッファ用により多くのRAMも必要になります)。</li>
			<li>非常に小さなデータセットで、アクセス頻度も低い場合でも、分散と安全性を担保するために、3台のノードが必要でしょう。</li>
		</ul>
		<p>Couchbase Serverでは、クラスタ内のノード台数を増やすことでクラスタのキャパシティ(RAM、ディスク、CPU、ネットワーク)を拡張できます。それぞれの上限がクラスタサイズを増やすことでリニアに増加します。</p>
		
		<dl>
			<dlentry>
				<dt>RAMサイジング</dt>
				<dd>RAMは通常最もクリティカルなサイジングパラメータです。 また、性能や安定性に最も影響を与えます。</dd>
			</dlentry>
		</dl>
		<dl
			>
			<dlentry>
				<dt>ワーキングセット</dt>
				<dd>ワーキングセットはクライアントアプリケーションがアクティブに利用するデータです。
					ワーキングセットがメモリ内に常駐するのが理想的で、これは必要なメモリ容量に影響します。</dd>
			</dlentry>
		</dl>
<dl>
	<dlentry>
		<dt>メモリ割当量</dt>
		<dd>予定しているワーキングセットサイズと、全データサイズに応じてCouchbaseクラスタをサイジングすることは非常に重要です。 サイジングのゴールはすべてのドキュメントID、ドキュメントIDメタデータ、そしてワーキングセットのバリューが収まるRAMをサイジングすることです。
					Couchbase ServerがRAMからディスクへとバリューの除去を開始するポイント(高水位)よりも、メモリ利用が下回る必要があります。</dd>
	</dlentry>
</dl>
		
			
			<note type="important">Couchbase Serverノードにマシンの全RAMを割り当てることはできません(<codeph>per_node_ram_quota</codeph>)、他のプログラムもマシン上で稼働するためです。</note>
			
			<p>ノードごとにどの程度メモリやディスク領域が必要になるかはいくつかの様々な要素に依存します。</p>
			
			
			<p>以下はバケット単位の計算方法で、複数のバケットすべてで合計する必要があります。 すべてのバケットが同一の設定であれば、全体のデータを単一バケットとして扱うこともできます。
				バケット単位のオーバヘッドは考慮する必要はありません。</p>
			
			<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="3*"/>
				<thead>
					<row>
						<entry>変数</entry>
						<entry>説明</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><varname>documents_num</varname></entry>
						<entry>ワーキングセットのドキュメント総数</entry>
					</row>
					<row>
						<entry><varname>ID_size</varname></entry>
						<entry>ドキュメントIDの平均サイズ</entry>
					</row>
					<row>
						<entry><varname>value_size</varname></entry>
						<entry>バリューの平均サイズ</entry>
					</row>
					<row>
						<entry><varname>number_of_replicas</varname></entry>
						<entry>オリジナルデータのコピーをいくつ保持するか</entry>
					</row>
					<row>
						<entry><varname>working_set_percentage</varname></entry>
						<entry>メモリ内に保持するデータのパーセンテージ</entry>
					</row>
					<row>
						<entry><varname>per_node_ram_quota</varname></entry>
						<entry>Couchbaseに割り当てられるメモリ容量 </entry>
					</row>
				</tbody>
			</tgroup>
			</table>
			
			<p>必要なメモリ容量の計算には以下の項目を利用します:</p>
			
			<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="2*"/>
				<thead>
					<row>
						<entry>定数</entry>
						<entry>説明</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>ドキュメント単位のメタデータ (metadata_per_document)</entry>
						<entry>これはCouchbaseがドキュメントごとのメタデータを保持するために必要なメモリ容量です。 メタデータは56 byte利用します。 ノードが稼働中でデータをサービスしている間、すべてのメタデータはメモリ内に保持しなくてはなりません。</entry>
					</row>
					<row>
						<entry>SSDまたは回転式ディスク</entry>
						<entry>SSDはより良いI/O性能を提供します。</entry>
					</row>
					<row>
						<entry>headroom</entry>
						<entry>クラスタはメタデータ保存用に追加のオーバヘッドを必要とします。 この領域をheadroomと呼びます。 データセット自体が必要とするRAMに対し、およそ25-30%余分に領域が必要です。 SSDは回転式ハードディスク(伝統的)よりも高速なため、SSDでは25%、回転式ハードディスクでは30%のメモリとします。</entry>
					</row>
					<row>
						<entry>高水位 (high_water_mark)</entry>
						<entry>デフォルトではノードのRAMの高水位は85%に設定されます。
						</entry>
					</row>
				</tbody>
			</tgroup>
			</table><p>以下はクラスタサイジングガイドラインの概要です:</p>
			
			<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="2*"/>
				<thead>
					<row>
						<entry>変数</entry>
						<entry>計算式</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><varname>no_of_copies</varname></entry>
						<entry><codeph>1 + number_of_replicas</codeph></entry>
					</row>
					<row>
						<entry><varname>total_metadata</varname>. 全ドキュメントのメタデータがメモリに保持される必要があります。</entry>
						<entry><codeph>(documents_num) * (metadata_per_document + ID_size) *
								(no_of_copies)</codeph></entry>
					</row>
					<row>
						<entry><varname>total_dataset</varname></entry>
						<entry><codeph>(documents_num) * (value_size) *
							(no_of_copies)</codeph></entry>
					</row>
					<row>
						<entry><varname>working_set</varname></entry>
						<entry><codeph>total_dataset * (working_set_percentage)</codeph></entry>
					</row>
					<row>
						<entry>クラスタで必要なRAM容量</entry>
						<entry><codeph>(total_metadata + working_set) * (1 + headroom) /
								(high_water_mark)</codeph></entry>
					</row>
					<row>
						<entry>必要なノード台数</entry>
						<entry><codeph>クラスタで必要なRAM容量 / per_node_ram_quota</codeph>
						</entry>
					</row>
				</tbody>
			</tgroup>
			</table>
			
			<note type="important">データサイズに関わらず、少なくともレプリカ数 + 1台のノードが必要です。</note>
			<p>以下はサイジング計算のサンプルです:</p>
			
			<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="3*"/>
				<thead>
					<row>
						<entry>変数</entry>
						<entry>値</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><varname>documents_num</varname></entry>
						<entry>1,000,000</entry>
					</row>
					<row>
						<entry><varname>ID_size</varname></entry>
						<entry>100</entry>
					</row>
					<row>
						<entry><varname>value_size</varname></entry>
						<entry>10,000</entry>
					</row>
					<row>
						<entry><varname>number_of_replicas</varname></entry>
						<entry>1</entry>
					</row>
					<row>
						<entry><varname>working_set_percentage</varname></entry>
						<entry>20% </entry>
					</row>
				</tbody>
			</tgroup>
			</table>
				
				<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="3*"/>
				<thead>
					<row>
						<entry>定数</entry>
						<entry>値</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>ストレージの種類</entry>
						<entry>SSD</entry>
					</row>
					<row>
						<entry>overhead_percentage</entry>
						<entry>25%</entry>
					</row>
					<row>
						<entry>metadata_per_document</entry>
						<entry>2.1 以降は56、 2.0.x は64</entry>
					</row>
					<row>
						<entry>high_water_mark</entry>
						<entry>85% </entry>
					</row>
				</tbody>
			</tgroup>
			</table>
			
			<table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="3*"/>
				<thead>
					<row>
						<entry>変数</entry>
						<entry>計算式</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><varname>no_of_copies</varname></entry>
						<entry>= オリジナルに1、レプリカに1</entry>
					</row>
					<row>
						<entry><varname>total_metadata</varname></entry>
						<entry>= 1,000,000 * (100 + 56) * (2) = 312,000,000</entry>
					</row>
					<row>
						<entry><varname>total_dataset</varname></entry>
						<entry>= 1,000,000 * (10,000) * (2) = 20,000,000,000</entry>
					</row>
					<row>
						<entry><varname>working_set</varname></entry>
						<entry>= 20,000,000,000 * (0.2) = 4,000,000,000</entry>
					</row>
					<row>
						<entry>クラスタで必要なRAM容量</entry>
						<entry>= (440,000,000 + 4,000,000,000) * (1+0.25)/(0.7) =
							7,928,000,000</entry>
					</row>
				</tbody>
			</tgroup>
			</table>
			
			<p>例えば、8GBのマシンで6GBをCouchbaseに割り当てる場合...</p>
			
			<codeblock>number of nodes =
    Cluster RAM quota required/per_node_ram_quota =
    7.9 GB/6GB = 1.3 or 2 nodes
</codeblock>
			
			
		
	
		
		<section><title>ネットワーク帯域</title>
			<p>ネットワーク帯域は通常クラスタのサイジングで重要な要素にはなりません。 しかしながら、クライアントがクラスタ内の情報にアクセスするにはネットワーク帯域が必要です。 ノード間で情報をやり取りするためにもネットワーク帯域が必要です。</p>
			
			<p>一般的に、ネットワーク帯域要件の計算には、以下の式を利用します:</p>
			
			<codeblock>Bandwidth = (operations per second * item size) + overhead for rebalancing </codeblock>
			
			<p><codeph>秒間オペレーション数</codeph>を以下の式で計算します:</p>
			
			<codeblock>Operations per second = Application reads + (Application writes * Replica copies) </codeblock>
			</section>
		
		<section><title>データの安全性</title>
			<p>データを安全に保持するためには、クラスタ内で十分なノード台数(そして正しい設定)が必要です。 ノード間での情報の分散と、クラスタ内で保存される情報のレプリカ数という2つの考慮すべき側面があります。</p>
		</section>
		
		<section><title>データの分散</title>
			<p>基本的には、より多くのノードの方が、より少ないノードよりも良いです。 2台しかノードがない場合、データは50%ずつ、2台のノードに分散されます。 
				これは、1台がダウンした影響がデータセットの半分におよぶことを意味します。 
				一方で、10台ノードがあれば、データセットの10%だけが1台のノードがダウンした場合に影響を受けます。 
				自動フェイルオーバを利用していても、ノードがダウンした時にデータが利用できない期間が発生します。 
				これはより多くのノードを利用することで軽減できます。</p>
			
			<p>フェイルオーバ後にクラスタが受け付ける負荷についても考慮する必要があります。 
				どれだけ負荷が増加し、それに準備できているか検討が必要です。2台しかなければ、それぞれは1台で全アクセスを処理できる準備ができている必要があります。 
				10ノードでは、1台のノードが故障した場合、全ワークロードの10分の1を余計に処理できるようにすれば良いのです。</p>
			
			<p>2ノードでも最低限の冗長性を提供できますが、常に最小でも3ノードを利用することをお勧めします。</p>
		</section>
		
		<section><title>レプリケーション</title>
			<p>Couchbase Serverではレプリカ数を3つまで設定できます（データセットのコピーを4つ生成します）。 
				障害が発生した場合、レプリカ数と同じノード数しか"フェイルオーバ"できません(手動でも自動でも)。 
				例:</p>
			<ul>
				<li>5台のクラスタでレプリカを1とした場合、1つのノードがダウンすると、それをフェイルオーバできます。 2つ目のノードがダウンすると、フェイルオーバするために十分なレプリカのコピーがないため、より時間のかかる復旧処理を実施しなくてはなりません。</li>
				<li>5ノードのクラスタでレプリカを2つ設定していると、1つのノードがダウンしたら、それをフェイルオーバできます。 2つ目のノードがダウンしても、それをフェイルオーバできます。 3つ目のノードがダウンした場合、フェイルオーバに必要なレプリカが十分に存在しない状態になります。</li>
			</ul>
			<p>ノードがダウンし、フェイルオーバした後は、可能な限り早くそのノードを交換し、リバランスするようにしてください。 リバランスによりレプリカコピーが再作成されます(レプリカ数に十分なノード数がある場合)。</p>
			
			<note type="tip">目安として、以下の設定を推奨します：
			<ul>
				<li>5ノードまではレプリカ数1</li>
				<li>5から10ノードはレプリカ数1または2</li>
				<li>10ノードより大きなクラスタではレプリカ数1、2あるいは3</li>
			</ul>
				これには多くのバリエーションがありますが、小規模のクラスタ内で多くのレプリカを持ってもそれほど効果がありません。
			</note>
			
			</section>
		
		<section><title>ハードウェア要件</title>
			<p>一般的にCouchbase Serverのハードウェア要件は非常に低く、コモディティハードウェア、あるいは仮想化システム上で動作するように設計されています。
				とはいえ、サーバーの主な考慮事項のおおよその目安として:
				</p>
			<ul>
				<li>RAM: 最も重要です。 アクティブなアイテムを保持し、Couchbase Serverが低いレイテンシを提供する主な理由であるためです。</li>
				<li>CPU: Couchbase ServerのCPU要件は非常に低いものです。 サーバはマルチスレッドであるためマルチコアシステムの恩恵を受けます。 少なくとも4つまたは8つの物理コアを搭載したマシンを推奨します。</li>
				<li>ディクス: RAMをIO層から切り離すことで、Couchbase Serverは他のデータベースに比べ、低速なディスクであっても効率的に扱うことができます。 
						ベストプラクティスとして、サーバインストール、データディレクトリ、インデックスディレクトリにはそれぞれ個別のデバイスを利用します。</li>
				<li>ネットワーク: ギガビットイーサインタフェースを利用したほとんどの構成で動作します。 10GBitやInfinibandのようにさらに高速なソリューションを利用することもできます。</li>
			</ul>
			<p>SAN、SAS、SATA、SSDおよびEBSで動作が確認され、次の構成が推奨されます：</p>
			
			<ul>
				<li>SSDは書き込みキューを処理する点でも、データをリストアする点（コールドブート及びリバランシング用途）でも優れた性能を発揮することができます。</li>
				<li>RAIDは、一般的にスループットと信頼性の向上を提供します。</li>
				<li>（Amazon EC2の）EBSボリュームでストライピングすると、スループットを高めることができます。</li>
			</ul>

		</section>
		
		<section><title>クラウド環境に関する考慮事項（例えばAmazon EC2）</title>
			<p>クラウド環境においては、信頼性や一貫したIO性能が確保できないため、ノード単位のRAMフットプリントを縮小し、ノード数を増やすことをお勧めしています。 これにより、より良いディスクスループットに加え、各ノードが保持するデータが（そして転送するデータも）少なくなるため、リバランスも容易になります。 さらにデータを分散することで、単一のノードが故障した際（一般に起こりえます）に受ける影響も軽減することができます。</p>
		</section>
	</body>
	<related-links>
		<linklist>
			<link href="../Concepts/bp-cloudDeployment.dita"></link>
		</linklist>
	</related-links>
</topic>
