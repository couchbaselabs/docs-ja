<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic2131">
 <title>クラスタ設計の考慮事項</title>
 <shortdesc>クラスタ設計はRAM、ノード数、コア数クライアントサイドおよびサーバサイドのmoxiなどを検討する必要があります</shortdesc>
 <body>
  
  <dl>
   <dlentry>
    <dt>RAM</dt>
    <dd>メモリはクラスタのスムーズな動作に係る重要な要素のひとつです。Couchbase Serverはアクティブなデータセットのほとんどをメモリ上に配するようなアプリケーションに最適です。頻繁に利用されるデータ（ワーキングセット）が全て収まるように十分なメモリを割り当てることが非常に重要です。十分な空きメモリがない場合、一部のドキュメントがメモリから排出され、ディスク上にのみ存在するようになります。ディスクへのアクセスはメモリ内のデータに比べはるかに遅くなります。その結果、排出されたデータが頻繁にアクセスされる場合、クラスタのパフォーマンスが低下します。設定を確認し、パフォーマンスを最適化し、このような状況を回避するためにサイジングガイドラインで提供されている式を使用してください。</dd>
   </dlentry>
  </dl>
  
  <dl>
   <dlentry>
    <dt>ノード数</dt>
    <dd>必要なメモリサイズが分かったら、次に少数の大きなノードか、多数の小さなノードにするかを決める必要があります。<ul>
      <li>多数の小さなノード: I/O アクセスを複数のマシンに分散できますが、（クラスタ全体において）ノードが故障する可能性も高くなります。</li>
      <li>少数の大きなノード: ノード故障が発生した場合、アプリケーションへの影響は大きくなります。</li>
      <li>この選択は信頼性と効率のトレードオフです。</li>
     </ul></dd>
   </dlentry>
  </dl>
  
  <dl>
   <dlentry>
    <dt>クライアントサイドもしくはサーバサイドのmoxi</dt>
    <dd>Couchbase Serverはクライアントサイドのmoxi（もしくはスマートクライアント）の方がサーバサイドのmoxiよりも効率的です。しかし、開発環境やより早く、容易なデプロイのために、サーバサイドのmoxiを利用することが出来ます。クライアントの要求を受信し、要求されたデータがない場合、余計なホップが生成されるためサーバサイドのmoxiは推奨されません。</dd>
   </dlentry>
  </dl>
  
  <dl>
   <dlentry>
    <dt>コア数</dt>
    <dd>Couchbase ServerはCPU性能より、メモリやI/O性能に影響されます。しかし、少なくとも2つのコアを持つマシンで利用するのが効率的です。</dd>
   </dlentry>
  </dl>
 
  
  <dl>
   <dlentry>
    <dt>ストレージの種類</dt>
    <dd>データ格納先として、SSD（ソリッドステートドライブ）か回転式ディスクドライブが選択できます。SSDは回転式メディアよりも高速ですが、現在は高コストです。SSDの場合、I/Oのキューバッファがより小さくなるため、Couchbase Serverで必要となるメモリも少なくなります。</dd>
   </dlentry>
  </dl>
  
  <dl>
   <dlentry>
    <dt>WANデプロイメント</dt>
    <dd>Couchbase Serverはクラスタやクライアントが複数のデータセンターにまたがるようには設計されていません。クラスタ内（サーバ間）だけでなく、クラスタとCouchbaseクライアント間のレイテンシも非常に低い必要があります。もし1箇所以上のデータセンターをまたぐ必要がある場合は、<xref href="../XDCR/xdcr-intro.dita">クロスデータセンターレプリケーション(XDCR)</xref>を参照してください。</dd>
   </dlentry>
  </dl>
  
  <dl>
   <dlentry>
    <dt>共有ストレージ</dt>
    <dd>SANやNASのようなバックエンドの共有ストレージシステムは使用しないことを強く推奨します。それらはよいパフォーマンスを提供しますが、Couchbaseの分散性を制限し、単一のボトルネックや障害原因となります。</dd>
   </dlentry>
  </dl>
 
 
 </body>

</topic>
