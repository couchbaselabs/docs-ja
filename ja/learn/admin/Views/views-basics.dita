<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic1880">
  <title>Viewの基本</title>
  <shortdesc>Viewはデータから特定のフィールドや情報を抽出して、インデックスの作成を可能とします。</shortdesc>
  <body>
		<p>
			Viewの目的はCouchbase Serverデータベースに保存された非構造化、半構造化データを元に、任意のフィールドや情報を抽出し、選択した情報のインデックスを生成することです。
			Couchbase Serverに情報をJSON形式で保存すると、特定のフィールドを選択して出力する処理がより簡単になります。
			この結果として生成された構造が保存されているデータに対するViewです。
			この処理中に生成されたViewを利用して、データベース内に保存されたデータオブジェクト情報の走査、選択やクエリが可能となります。
		</p>
    <p>以下の図はこの処理の概要を示しています。</p>

        <image href="../images/views-basic-overview.png" width="600"></image>

		<p>
			上記の例では、Viewが保存されたドキュメントのName、City、Salaryのフィールドを利用し、各ドキュメントについて、これらの情報から成る配列をView内に生成します。
			ViewはCouchbaseバケット内の全てのドキュメントを走査することで作成され、指定した情報を出力します。
			結果としてインデックスが保存され、利用可能となり、新規データが保存されると、Viewにアクセスした際にインデックスが更新されます。
			この処理はインクリメンタルであり、稼働中に与える性能への影響は小さいです。
			既存の大きなデータセットに対して新規のViewを作成すると、構築に長時間かかることがありますが、データの更新は高速です。
		</p>
		<p>
			Viewの定義は、フォーマットと、データベース内の各ドキュメントから生成するコンテンツを指定します。
			保存したJSONのフィールドに依存した処理であり、ドキュメントがJSONではない、あるいはViewで指定したフィールドが存在しない場合、その情報は無視されます。
			このため、幾つかのドキュメントで軽微なエラーや関連するフィールドの欠損があったとしても、Viewを生成することができます。
		</p>
		<p>
			ドキュメント型データベースの利点の一つは、アプリケーション全体を変更したり、コストのかかるスキーマの更新を事前に実行することなく、データベース内に保存されたドキュメントのフォーマットをいつでも変更できることです。
		</p>
  </body>
</topic>
