<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic_ynd_gm2_q4">
  <title>リバランス実行時の考慮事項</title>
  <shortdesc>クラスタをいつ、なぜ、どのようにリバランスするかは、シナリオに依存します。</shortdesc>
  <body>
    <p>どの状況かを選択し適用するかはいつも単純とは限らず、様々な要素がいつノード構成を変更してリバランスを行うべきかを決定します。</p>
    
    <section><title>いつクラスタを拡張するべきか</title>
    <p>より多くのノードを追加することで、クラスタのサイズを拡張できます。 ノードを追加することで、利用可能なRAM、ディスクI/O、クライアントアプリケーションで利用可能なネットワーク帯域が増加し、より多くのマシンに負荷を分散可能になります。 ここでは、タイミングを決定するためにいくつかのメトリックと統計情報があります:</p>
      
      <dl>
        <dlentry>
          <dt>RAM容量を増加する</dt>
          <dd>Couchbase Serverクラスタ内で最も重要なコンポーネントの一つが利用可能なRAM容量です。 RAMはCouchbase Serverのキャッシュレイヤとしてアプリケーションデータを保存するだけでなく、その他のオペレーションでもサーバによって利用されます。 全体で利用可能なRAM容量を低減すると、どこか別の場所で性能の問題を引き起こすこともあります。 以下にクラスタのRAM容量を増加すべき一般的なインジケータを示します: <ul>
              <li>より多くのディスクフェッチが発生している場合、アプリケーションがリクエストしたデータがRAM上に存在せず、より多くのデータをディスクからフェッチしていることを意味します。 クラスタ内のRAMを増加すると、より多くのデータをRAMに保持でき、より良いパフォーマンスをアプリケーションに提供できます。</li>
              <li>Couchbase Serverクラスタにより多くのバケットを追加する場合、より多くのRAMが必要になることがあります。 ノードを追加すると、システム全体のキャパシティを増加し、既存バケットを縮小して新規バケット用の空きを作ることができます。</li>
            </ul></dd>
        </dlentry>
      </dl>
    
    
    <dl>
      <dlentry>
        <dt>ディスクI/Oスループットを増加させる</dt>
        <dd>Couchbase Serverクラスタにノードを追加することで、クラスタ全体で実行可能なディスクI/Oを増加させることができます。 これは特に書き込み頻度の高い環境で重要です、しかしディスクから大量のデータを参照する必要がある場合にも重要な要素となります。</dd>
      </dlentry>
    </dl>
    <dl>
      <dlentry>
        <dt>ディスク容量を増加させる</dt>
        <dd>現在のノードにより多くのディスク容量を追加するか、より多くのノードを追加することでクラスタ全体のディスク容量を追加できます。</dd>
      </dlentry>
    </dl>
      
      <dl>
        <dlentry>
          <dt>ネットワーク帯域を増加させる</dt>
          <dd>クラスタのネットワーク帯域が飽和してしまうか、飽和しそうなポイントに達した場合、より多くのノードが必要である協力なインジケータとなります。 より多くのノードはこれらの追加したノードに、必要なネットワーク帯域を拡散し、各ノード個別の帯域を削減します。</dd>
        </dlentry>
      </dl>
    
    </section>
      
      
      
      <section><title>いつクラスタを縮小すべきか</title>Couchbaseクラスタ縮小の選択はより主観的な判断となります。 通常は、コスト面での考慮、またはアプリケーション要件が変わり、必要な負荷に対応するために大きなクラスタが必要になくなったときに検討します。 <p>いつクラスタを縮小すべきか:</p><ul>
        <li>データセットとアプリケーション負荷をサポートするために、残りのノードで十分なキャパシティを提供できるか確認してください。 ノードを削除すると、十分なノードが存在しない場合、クラスタに不利益な重大な影響を与えることがあります。</li>
        <li>理想的なクラスタサイズの決定を試行する場合、一度に複数のノードを削除することは避けてください。 代わりに、各ノードを一度に一つずつ削除し、クラスタ全体での影響を理解できるようにします。</li>
        <li>フェイルオーバを利用するより、ノードの削除とリバランスを利用してください。 ノードがダウンし、クラスタに復帰しない場合、フェイルオーバ機能によってそのレプリカvBucketが即座にアクティブに昇格されます。 健全なノードをフェイルオーバすると、実行中のオペレーションのレプリケーションデータの一部を失う可能性があります。 <codeph>remove</codeph>を利用すると、すべてのデータが正しくレプリケートされ、継続して利用可能であることを保証できます。 </li>
      </ul></section>
    
    <section><title>いつクラスタをリバランスすべきか</title>

    <p>ノードを追加または削除することを決定したなら、次の点を考慮してください:</p>
      <ul>
                <li>複数のノードを短時間で追加または削除することを計画している場合、一台ずつリバランスを実行するよりも、それらすべてを一度に追加し、リバランスを実行するのが最良の手順です。 これはシステムにかかる全体的な負荷と、移動が必要なデータ量を削減します。</li>
                <li>クラスタへの負荷が低い時間帯にノードを追加します。 リバランス操作はオンラインで実行できるように設計されているものの、"全く負荷がない"処理ではなく、ディスクI/O、ネットワーク帯域、CPU利用率、RAM利用量という形でシステム全体の負荷を増加させることは疑う余地はありません。</li>
                <li>自主的にリバランスを行う場合(フェイルオーバ後の復旧ではない場合)は、システムの利用が少ない時間帯に実行すべきです。 クラスタ内でデータが再分散されるため、リバランスは比較的リソースインテンシブな処理であり、全体的なクラスタパフォーマンスに不利益な影響を与えることを避けるために、システムを活発に利用している時間帯にリバランスを実行することは避けるべきです。</li>
                <li>リバランスはクラスタ内で大量のデータを移動します。 より多くのRAMが利用できれば、オペレーティングシステムがより多くのディスクアクセスをキャッシュでき、リバランス処理をより高速に実行できます。 クラスタ内に十分なメモリがない場合、リバランスは非常に遅くなるでしょう。 クラスタのキャパシティを使い切る前に、新規ノードを追加しリバランスを実行することを推奨します。</li>
              </ul>
    </section>
    
  </body>
</topic>
