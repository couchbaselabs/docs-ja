<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="ja" id="concept_e1d_lxf_q4">
 <title>バケット種別によるリバランスの影響</title>
 <shortdesc>リバランス操作はクラスタ全体、Couchbaseとmemcahcedバケットの両方で動作します。</shortdesc>
 <conbody>
  <p>二つのバケット種別が持つ違いにより、Couchbaseとmemcachedバケットでのリバランス処理には異なる点があります。</p>
  
  <section><title>Couchbaseバケット</title>
  
  <p>Couchbaseバケットでは:</p><ul>
     <li>新しい構成に一致するように、データはクラスタ内のすべてのノードにリバランスされます。</li>
     <li>更新されたvBucketマップは各vBucketが正常に移動するにつれ、クライアントへと伝わります。</li>
     <li>データロスは発生せず、キャッシュや各キーの可用性には変化がありません。</li>
  </ul></section>
  
  
  <section><title>Memcachedバケット</title>
  <p>Memcachedバケットでは:</p>
  <ul>
     <li>新規ノードがクラスタに追加されると、各新規ノードはmemcachedバケットデータをサポートするノードのリストに追加されます。</li>
     <li>クラスタからノードが削除されると、そのノードで保存されていたmemcachedバケット内のデータは失われ、そのノードは利用可能なノードのリストから削除されます。</li>
     <li>どちらの場合も、バケットデータを処理するノードのリストは自動的に更新され、クライアントノードへと伝わります。 Memcachedバケットは、サーバの変更に対応できるように設計されているKetamaハッシュアルゴリズムを利用しています。 しかしながら、サーバノードの変更によりハッシュが移動することになり、リバランス操作が完了すると、いくつかのキーが利用できなくなります。</li>
    </ul>
  </section>
  
 </conbody>
</concept>
