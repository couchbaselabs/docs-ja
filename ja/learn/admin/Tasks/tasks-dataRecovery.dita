<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic8798">
 <title>リモートクラスタからのデータリカバリ</title>
 <shortdesc>リモートクラスタからのデータリカバリはXDCR環境、負荷と復旧データを扱うための十分なメモリとディスク容量が必要です。</shortdesc>
 <body>
  <p>レプリカ数を超えるノードがダウンしてしまうと、クラスタ内のデータパーティションは利用できなくなります。 例えば、4ノードのクラスタでレプリカを1つの構成で、2つのノードがダウンすると、いくつかのデータパーティションが利用できなくなります。
	 この状況の解決方法は二つあります:</p>
  <ul>
   <li>ディスクからデータを復旧する。 ディスクから復旧する計画の場合、ディスクが完全に故障してしまうと復旧できなくなります。</li>
   <li>リモートクラスタのパーティションから復旧する。 二つ目のクラスタにXDCRのデータレプリケーションを設定している場合、この方法が利用できます。 <codeph>cbrecovery</codeph>を利用するためには、バックアップデータを保持する第二のクラスタを構築する必要があります。</li>
  </ul>
  <p>以下は複数ノードの障害により、クラスタのレプリカvBucketが消失しているシナリオを表しています:</p>
  
  <image href="../images/cb_rec_multi_failure.png" width="600"></image>
  
  <p>リカバリを実行する前に、メインのクラスタが十分なメモリとディスク容量を持っていて、負荷と復旧するデータを扱えることを確認してください。
		ノード障害が起こったクラスタにデータが復旧できるとしても、ノード障害の原因を調査し、データを復旧する前に、十分なキャパシティを持つクラスタを用意することが重要です。
		ノード追加後はリバランスを実行してください。 </p>
  
  <p><codeph>cbrecovery</codeph>を利用すると、メインのクラスタとバックアップのクラスタのデータパーティションを比較し、検知した消失しているデータパーティションを送信します。 失敗した場合、<codeph>cbrecovery</codeph>を正常にリスタートすると、クラスタ間の差分を再度比較し、失敗した時点から消失しているパーティションを特定し、これらのパーティションの復旧を再開します。</p>
  <p><b>障害シナリオ</b></p>
  <p>4ノードのクラスタで、レプリカ数が1のとき、以下の事象が発生したとします。 各ノードは256のアクティブ、256のレプリカvBucketを持ち、合計で1024のアクティブ、1024のレプリカvBucketとなります。</p>
  <ol>
   <li>ノードが一つダウンすると、クラスタ内のいくつかのアクティブとレプリカのvBucketが利用できなくなります。</li>
   <li>このノードをフェイルオーバすると、他のノード上にある関連するレプリカvBucketがアクティブの状態に遷移します。 この時点で、完全なアクティブのvBucketセットと、部分的なレプリカvBucketセットがクラスタ内に存在します。</li>
   <li>二つ目のノードがダウンします。 より多くのアクティブvBucketがアクセスできなくなります。</li>
   <li>二つ目のノードをフェイルオーバします。 この時、対応するレプリカvBucketが存在しないアクティブvBucketはすべて消失してしまいます。</li>
  </ol>
  <p>このようなシナリオのとき、<codeph>cbrecovery</codeph>を利用して、失われたvBucketをバックアップクラスタから取得できます。 メインとバックアップの両クラスタで、複数ノードの障害が発生した場合、データロスが発生してしまいます。</p>
  <p><b>cbrecoveryのリカバリシナリオ</b></p>
  <p>このアプローチが発生した障害シナリオに有効かどうか、より良く理解していただけるよう、以下にいくつかのクラスタ構成を記載します:</p>
  <ul>
   <li>クラスタ内の複数ノードがダウン。 クラスタ内の複数ノードがダウンすると、いくつかのvBucketが利用不可となります。 この場合、すでに他のクラスタとXDCRをセットアップしていれば、それらの利用できないvBucketを他のクラスタから復旧できます。</li>
   <li>レプリカが不十分なバケット。</li>
  </ul>
	<p><b>単一バケット</b>。 クラスタ内に、レプリカが0の単一のバケットしか存在しない場合、
		クラスタ内のノードがダウンすると、そのノードのパーティションは利用不可となります。
		このクラスタでXDCRをセットアップしてあれば、失われたパーティションを<codeph>cbrecovery</codeph>で復旧できます。</p>
  <p><b>複数バケット</b>。 クラスタ内のノードは複数のバケットを持ち、あるバケットにはレプリカがあり、またレプリカを持たないバケットもあるでしょう。 以下の図では、すべてのノードがBucket 1とBucket 2の二つのバケットを持っているクラスタを示しています。 Bucket 1はレプリカがありますが、Bucket 2にはありません。 この場合、ノードが1つダウンすると、Bucket 1にはレプリカがあるので、そのノードをフェイルオーバすれば、他のノード上のレプリカをアクティブにできます。
	 しかし、レプリカがないバケットのいくつかのパーティションは利用不可となり、<codeph>cbrecovery</codeph>でデータを復旧しなくてはなりません。
	 この例で、もしクラスタ内の複数のノードがダウンした場合、どちらのバケットもパーティションが失われるため、vBucketリカバリを両バケットに対して実行する必要があります。</p>
  
  <image href="../images/cbrecovery_diff_replicas.png" width="600">
   </image>
  
  <p><b>リカバリのハンドリング</b></p>
  <p>ノード障害が発生し、vBucketが利用できなくなった場合、以下のプロセスに従ってください:</p>
  <ol>
   <li>各障害ノードで、WebコンソールのServer NodesタブにあるFail Overをクリックします。 
    <p>Fail Overをクリックすると、Web コンソールのLogタブにデータが利用不可かどうか、また利用不可のvBucketはどれかが表示されます。 フェイルオーバしたノード数に対して十分なレプリカがない場合、いくつかのvBucketが利用不可となります:</p>

      <image href="../images/post-failover-log-lost-data.png" width="600">
      </image>
   </li>

   <li>障害ノードを置換するための、正常に機能する新規ノードを追加します。
    <p>新規ノードをクラスタに追加後、リバランスはしないでください。 通常、ノードをクラスタに追加後にリバランスをしますが、このシナリオではリバランスすると、失われたvBucketの情報が削除されてしまい、それらを復旧することができなくなります。</p>

      <image href="../images/cb_recovery1b.png" width="600">
      </image>

    <p>この例では、3ノードのクラスタ内で、2つの障害ノードが存在し、新規ノードとして、10.3.3.61を追加しています。</p>
    <p>お使いのクラスタが容易に負荷と復旧データを処理できるなら、このステップはスキップしても構いません。</p></li>
   
   <li><codeph>cbrecovery</codeph>を実行し、バックアップクラスタからデータを復旧します。 Serverパネルに、Stop Recoveryボタンが表示されます。

      <image href="../images/cb_recovery2.png" width="600">
      </image>
    <p>リカバリが完了すると、このボタンは非表示となります。</p>
   </li>
    
   <li>クラスタをリバランスします。
    <p>リカバリが完了したら、クラスタをリバランスできます、実行するとレプリカを再作成し、クラスタ全体に均等に再分配します。</p>

      <image href="../images/cbrecovery_3b.png" width="600">
      </image>
   </li>
  </ol>
  
  <p><b>リカバリの'ドライラン'</b></p>
  <p>vBucketをリカバリする前に、クラスタ内で利用できなくなっているバケットのリストを確認したい場合があります。 次のコマンドとオプションを利用します:</p>
  <codeblock>
   shell&gt; ./cbrecovery http://Administrator:password@10.3.3.72:8091 http://Administrator:password@10.3.3.61:8091 -n
</codeblock>
<p>クラスタ内のノードの管理者情報を指定し、同時に<codeph>-n</codeph>オプションも指定しています。
	これはメインのクラスタ内にはすでに存在しない、リモートのセカンダリクラスタのvBucketの一覧を返します。 クラスタ内でノード障害が発生していて、利用不可となっているバケットが存在する場合、以下のように出力されます:</p>
  <codeblock>
   2013-04-29 18:16:54,384: MainThread Missing vbuckets to be recovered:[{"node": "ns_1@10.3.3.61",
"vbuckets": [513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526,, 528, 529,
530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545,, 547, 548,
549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
568, 569, 570, 571, 572,....
</codeblock>
<p><codeph>vbuckets</codeph>配列はクラスタ内で利用不可となっているすべてのvBucketを含んでいます。
	これらが、リモートクラスタから復旧できるバケットです。 vBucketのリカバリ方法:</p>
  <codeblock>
shell&gt; ./cbrecovery http://Administrator:password@&lt;From_IP&gt;:8091 \
 http://Administrator:password@&lt;To_IP&gt;:8091 -B bucket_name
</codeblock>
  <p>ホスト名、ポート、リモートクラスタの認証情報、失われたvBucketを持つクラスタの順で指定すれば、利用不可のvBucketがあるクラスタから、もしくはリモートクラスタからコマンドを実行できます。 <codeph>-B</codeph>パラメータを指定しない場合、ツールはデフォルトバケットの利用できないvBucketをリカバリします。</p>
  <p><b>リカバリプロセスのモニタリング</b></p>
  <p>Couchbase WebコンソールのData Bucketsタブでリカバリプロセスの進捗状況をモニタリングできます。</p>
  <ol>
   <li>Data Bucketタブをクリックします。</li>
   <li>Data Bucketsドロップダウンから、リカバリ中のデータバケットを選択します。</li>
   <li>Summaryドロップダウンをクリックし、このデータバケットのより詳細な情報を確認します。 <codeph>items</codeph>のグラフでリカバリ中に数値が上昇しているのが確認できます。

      <image href="../images/monitor_cb_recovery.png" width="600"></image>
   </li>

   <li>アクティブvBucketの数も増加し、1024個のvBucketとなるまでリカバリされます。 ドロップダウンでvBucket Resourcesをクリックします:

      <image href="../images/cbrec_monitor_vbucks.png" width="600">
      </image>

   <p>コマンドラインから実行したこのツールは、他のコマンドと同様、いつでも停止することができます。</p>
   </li>
    <li>Serversパネルに<codeph>Stop Recovery</codeph>ボタンが表示されます。 このボタンをクリックすると、クラスタ間のリカバリプロセスを停止します。 リカバリプロセスが完了すると、このボタンは非表示となり、クラスタをリバランスする必要があります。 Couchbase Webコンソールを表示していれば、このパネルからも停止できます:

      <image href="../images/stop_cbrecovery.png" width="600"></image>
    </li>

   <li>リカバリが完了した後、Server Nodesタブをクリックし、Rebalanceをクリックしてクラスタをリバランスします。</li>
  </ol>
  
  
  <p><codeph>cbrecovery</codeph>が完了すると、コンソールにレポートが出力されます:</p>
  <codeblock>
 Recovery :                Total |    Per sec
 batch    :                 0000 |       14.5
 byte     :                 0000 |      156.0
 msg      :                 0000 |       15.6
4 vbuckets recovered with elapsed time 10.90 seconds
</codeblock>
  
  <p>このレポート内の<codeph>batch</codeph>は<codeph>cbrecovery</codeph>によって実行された内部オペレーションのグループで、<codeph>byte</codeph>はリカバリされた総バイト数、<codeph>msg</codeph>はリカバリされたドキュメント数を示します。</p>
 </body>
 <related-links>
  <linklist>
   <link href="../Tasks/tasks-nodeFailover.dita"></link>
   <link href="../XDCR/xdcr-intro.dita"></link>
   <link href="../Tasks/tasks-manage-xdcr.dita"></link>
   <link href="../Tasks/tasks-rebalance.dita"></link>
   </linklist>
 </related-links>
</topic>
