<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="ja" id="concept_fz1_vxf_q4">
 <title>一般的なリバランスに関する質問</title>
 <shortdesc>一般的にリバランスに関して行われる質疑応答を紹介します。</shortdesc>
 <conbody>


 
   <section><title>リバランスにはどのくらいの時間がかかるか?</title>

  <p>リバランス操作はクラスタが継続してクライアントリクエストを処理する間に、RAMとディスクに保存されたデータを移動するため、リバランス操作の実行に必要な時間は各クラスタ独自のものになります。 その他の要素として、オブジェクトのサイズと数、ストレージに利用しているディスクの速度、ネットワーク帯域とキャパシティがリバランスの速度に影響します。</p>
  <p>ビジーなクラスタではリバランス操作の完了に非常に長時間かかることがあります。
   同様に、クラスタ上のノード間で巨大なデータを移動する場合、オペレーション完了までに長時間かかることがあります。 ビジーで大量のデータを保持するクラスタではリバランスが完了するまでに非常に長い時間がかかるでしょう。</p>
   </section>
  
  
  
   <section><title>何台のノードを追加、または削除できるのか?</title>
  
		 <p>機能的には一度の操作で追加および削除できるノード数に上限はありません。
			 しかしながら、現実的には、一度に追加または削除するノード台数に関しては保守的になるべきでしょう。</p>
    <ul>
     <li>クラスタを拡張するとき、より多くのノードを追加し、実行するリバランスの回数を減らすことが推奨される手順になります。</li>
     <li>ノードを削除するときは、一度に多くのノードを削除しすぎて、クラスタのキャパシティと機能性を極端に減らさないように注意してください。</li>
    </ul>
  <p>同時にノードの削除と追加ができる点も忘れないでください。 同時に追加と削除を実行することを検討している場合、複数のノードを同時に追加、および削除し、一回のリバランスを実行する方が、個々の移動ごとにリバランスを実行するよりも良いです。</p>
  <p>クラスタのサイズやパフォーマンスを一貫して維持するためには、ノードをスワップアウトさせます。</p>
   </section>
  
  

   <section><title>リバランス中にクラスタのパフォーマンスに影響はあるか?</title>
  
  <p>設計上、アプリケーションのパフォーマンスに重大な影響を与えるべきではありません。
   しかしながら、リバランス操作はクラスタ内のノード上の負荷、特にノード間でデータを転送するため、ネットワークとディスクI/O性能への負荷が大幅に増加することは明らかです。</p>
  <p>理想的には、稼働中のアプリケーションへの影響を削減するために、クラスタへの負荷が低い時間帯にリバランスを実行するべきです。</p>
   </section>
  
  

   <section><title>リバランス処理は停止できるか?</title>
  
  <p>クラスタ内のvBucketは個別に移動されます。 このため、リバランス処理はいつでも停止することができます。 すでに完全に移行されたvBucketだけがアクティブになります。 処理を継続するために、いつでもリバランス操作を再開できます。 </p>
   <p>部分的に移行されたvBucketはアクティブになりません。</p>
  <p>このルールに対する一つの例外は、クラスタからノードを削除する場合です。 リバランスの停止はノードの削除をキャンセルします。 リバランス処理を継続する前に、これらのノードを削除として再度マークする必要があります。</p>
  <p>必要なクリーンアップを確実にするため、リバランスを停止した後は、リバランスを再開できるまで5分の待機期間が必要です。 これはリバランスが再度リクエストされる前にクラスタが状態を修復することを保証するためです。</p>
   </section>

 </conbody>
</concept>
